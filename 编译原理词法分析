#include <iostream>
#include <cstdio>
#include <cstring>
#include <map>
#include <vector>
#include <queue>
using namespace std;
int isEqual(char a,char b)
{
    if(a == b)
        return 1;
    return 0;
}
int isOperation(char c)
{
    if(c == '+' || c == '-' || c =='*' ||c == '/' || c == '(' || c == ')')
        return 1;
    return 0;
}
int isNumber(char c)
{
    if(c>='48' && c<='57')
        return 1;
    return 0;
}

int main()
{
    string s;
    cin >> s;
    int len = s.size();
    queue<char>num;
    map<char,int> token;
    map<char,int>::iterator iter;
    token.insert(pair<char,int>('+',1));
    token.insert(pair<char,int>('-',2));
    token.insert(pair<char,int>('*',3));
    token.insert(pair<char,int>('/',4));
    token.insert(pair<char,int>('(',6));
    token.insert(pair<char,int>(')',7));

    string temp;
    int i;
     for(i=0;i<len;i++)
    {
        if(s[i] == '0' && s[i+1] == '.')  //开头是0的浮点数 0.5
        {
            temp = "";
            num.push(s[i]);
            num.push(s[i+1]);
            while(isdigit(s[i+2]))
            {
                num.push(s[i+2]);
                i++;
            }
            while(!num.empty())
            {
                temp = temp + num.front();
                num.pop();
            }
            cout << "(8," << temp << "," << temp << ",double)" << endl;
            continue;
        }
        //整数0
        else if(s[i] == '0' && s[i+1] != '.')
        {
             cout << "(5," << "0" << "," << "0" << ",int)" << endl;
             continue;
            // continue;
        }
        //整数1-9
        else if(isdigit(s[i]) && s[i+1] != '.' && s[i] != '0')
        {
            temp = "";
            while(isdigit(s[i]))
            {
                num.push(s[i]);
                i += 1;
            }
            while(!num.empty())
            {
                temp = temp + num.front();
                num.pop();
            }

            cout<< "(5," << temp << "," << temp << ",int)" << endl;
            continue;
        }
         //1开头的浮点数 1.0~9.9
        else if(isdigit(s[i]) && s[i+1] == '.' && s[i] != '0')
        {
            temp = "";
            num.push(s[i]);
            num.push(s[i+1]);
            while(isdigit(s[i+2]))
            {
                num.push(s[i+2]);
                i++;
            }
            while(!num.empty())
            {
                temp = temp + num.front();
                num.pop();
               // cout << temp <<endl;
            }
            num.front();
            num.pop();

            cout << "(8," << temp << "," << temp << ",double)" << endl;
            continue;

        }
         //是操作符
        else if(isOperation(s[i]))
        {
            for(iter = token.begin(); iter != token.end(); iter++)
            {
                if(isEqual(iter->first,s[i]))
                   cout << "(" << iter->second << "," << s[i] << "," << "NULL,NULL" << ")" << endl;
            }
            continue;
        }
    }

    return 0;
}

